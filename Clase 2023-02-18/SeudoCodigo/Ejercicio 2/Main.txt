agrupar(PilaEst a, PilaEva b) {
	aux = new PilaEst()
	aux2, aux3 = new PilaEva()
	while not a.esvacia() {
		elem = a.eliminar()
		aux.adicionar(elem)
		while not b.esvacia() {
			w = b.eliminar()
			if w.getCi() = elem.getCi() 
				aux3.adicionar(w)
			else 
				aux2.adicionar(w)
		}
		b.vaciar(aux2)
	}
	a.vaciar(aux)
	b.vaciar(aux3)
}

ordenar_y_agrupar(PilaEst a, PilaEva b) {
	aux = new PilaEst()
	aux2, aux3, aux4 = new PilaEva()
	while not a.esvacia() {
		elem = a.eliminar()
		aux.adicionar(elem)
		while not b.esvacia() {
			w = b.eliminar()
			if w.getCi() = elem.getCi() {
				aux4.adicionar(w)
			} else {
				aux2.adicionar(w)
			}
		}
		ordenar(aux4)
		aux3.vaciar(aux4)
		b.vaciar(aux2)
	}
	a.vaciar(aux)
	b.vaciar(aux3)
}

ordenar(PilaEva w) {
	a, b = new PilaEva()
	while not w.esvacia() {
		elem = new Evaluacion()
		elem = w.eliminar()
		while not w.esvacia() {
			x = new Evaluacion();
			x = w.eliminar();
			if x.getNota() > elem.getNota() {
				a.adicionar(elem)
				elem = x
			} else {
				a.adicionar(x)
			}
		}
		b.adicionar(elem)
		w.vaciar(a)
	}
	w.vaciar(b)
}

Begin:
	a = new PilaEst();
	b = new PilaEva();
	a.llenar(2)// 2 estudiantes
	b.llenar(5)// 5 evaluaciones
	a.mostrar()
	b.mostrar()
	agrupar(a, b)
	a.mostrar()
	b.mostrar()
	ordenar_y_agrupar(a, b)
	a.mostrar()
	b.mostrar()
End


